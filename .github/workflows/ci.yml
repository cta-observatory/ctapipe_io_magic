name: CI

on: [push, pull_request]

env:
  NUMBA_NUM_THREADS: 1
  MPLBACKEND: Agg
  PYTEST_ADDOPTS: --color=yes

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        ctapipe-version: ["v0.19.0",]

    defaults:
      run:
        shell: bash -exl {0}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set python version
        env:
          python-version: ${{ matrix.python-version }}
        run: |
          sed -i -e "s/- python=.*/- python=$PYTHON_VERSION/g" environment.yml

      - name: Create and activate env
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          use-mamba: true
          activate-environment: ci
          environment-file: environment.yml

      - name: install
        env:
          CTAPIPE_VERSION: ${{ matrix.ctapipe-version }}
        run: |
          pip install -e .
          # we install ctapipe using pip to be able to select any commit, e.g. the current master
          pip install pytest-cov "git+https://github.com/cta-observatory/ctapipe@$CTAPIPE_VERSION"
          git describe --tags

      - name: Download test data
        env:
          TEST_DATA_USER: ${{ secrets.test_data_user }}
          TEST_DATA_PASSWORD: ${{ secrets.test_data_password }}
        run: |
          chmod +x ./download_test_data.sh
          ./download_test_data.sh

      - name: Tests
        run: |
          # github actions starts a new shell for each "step", so we need to
          # activate our env again
          python eventsource_subclasses.py | grep MAGICEventSource
          pytest --cov=ctapipe_io_magic --cov-report=xml

      - uses: codecov/codecov-action@v1
